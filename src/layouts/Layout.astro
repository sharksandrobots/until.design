---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import '../assets/global.css';

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="favicon.svg?v=2" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<Header />
		<slot />
		<Footer />
	</body>
</html>

<script>
	// Set initial theme immediately
	const theme = (() => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme') || 'light';
		}
		if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
			return 'dark';
		}
		return 'light';
	})();

	// Set initial theme
	document.documentElement.setAttribute('data-theme', theme);
	window.localStorage.setItem('theme', theme);

	// Handle theme toggle
	const handleToggleClick = () => {
		const element = document.documentElement;
		const isDark = element.getAttribute('data-theme') === 'dark';
		const newTheme = isDark ? 'light' : 'dark';
		element.setAttribute('data-theme', newTheme);
		localStorage.setItem('theme', newTheme);
	}

	// Add click handler once DOM is ready
	document.addEventListener('DOMContentLoaded', () => {
		const themeToggle = document.getElementById('theme-toggle');
		if (themeToggle) {
			themeToggle.addEventListener('click', handleToggleClick);
		}
	});
</script>

<style is:global>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
		background-color: var(--colors-surface-primary);
	}

	main {
		padding-top: var(--space-0);
	}
</style>
